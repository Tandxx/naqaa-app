<!-- views/disguise.ejs - واجهة عربية مع الحفاظ على التمويه -->
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>نظام إدارة المشاريع - شركة التقنية المتقدمة</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Noto+Sans+Arabic:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #2484f2;
      --primary-dark: #1e6bb8;
      --primary-light: #4ea0ff;
      --bg-primary: #0a0b0f;
      --bg-secondary: #111218;
      --bg-tertiary: #1a1d24;
      --bg-card: #141720;
      --text-primary: #ffffff;
      --text-secondary: #a1a8b8;
      --text-muted: #6b7280;
      --border-color: #2a2f3a;
      --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.1);
      --shadow-md: 0 8px 32px rgba(0, 0, 0, 0.2);
      --shadow-lg: 0 16px 64px rgba(0, 0, 0, 0.3);
      --gradient-primary: linear-gradient(135deg, #2484f2, #1e6bb8);
      --gradient-bg: linear-gradient(135deg, #0a0b0f 0%, #111218 50%, #1a1d24 100%);
      --gradient-card: linear-gradient(145deg, #141720, #0f1114);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html {
      scroll-behavior: smooth;
      scroll-padding-top: 2rem;
    }

    body { 
      font-family: 'Noto Sans Arabic', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      background: var(--gradient-bg);
      color: var(--text-primary);
      line-height: 1.6;
      overflow-x: hidden;
      font-weight: 400;
      letter-spacing: -0.025em;
    }

    /* Smooth scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: var(--bg-secondary);
    }

    ::-webkit-scrollbar-thumb {
      background: var(--primary-color);
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: var(--primary-light);
    }

    .disguise-container {
      min-height: 100vh;
      position: relative;
      overflow: hidden;
    }

    /* Animated background particles */
    .disguise-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle at 20% 50%, rgba(36, 132, 242, 0.03) 0%, transparent 50%),
                  radial-gradient(circle at 80% 20%, rgba(36, 132, 242, 0.03) 0%, transparent 50%),
                  radial-gradient(circle at 40% 80%, rgba(36, 132, 242, 0.02) 0%, transparent 50%);
      animation: float 20s ease-in-out infinite;
      pointer-events: none;
    }

    @keyframes float {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      33% { transform: translate(30px, -30px) rotate(120deg); }
      66% { transform: translate(-20px, 20px) rotate(240deg); }
    }

    /* Navigation */
    .navbar {
      backdrop-filter: blur(20px);
      background: rgba(10, 11, 15, 0.8);
      border-bottom: 1px solid var(--border-color);
      position: sticky;
      top: 0;
      z-index: 100;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .navbar.scrolled {
      background: rgba(10, 11, 15, 0.95);
      box-shadow: var(--shadow-md);
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .navbar .container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.5rem 2rem;
    }

    .logo {
      font-size: 1.75rem;
      font-weight: 700;
      color: var(--text-primary);
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .logo:hover {
      transform: translateY(-1px);
      color: var(--primary-light);
    }

    .logo-icon {
      font-size: 2rem;
      filter: drop-shadow(0 0 20px rgba(36, 132, 242, 0.3));
      animation: pulse 3s ease-in-out infinite;
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.05); }
    }

    .nav-links {
      display: flex;
      list-style: none;
      gap: 0.5rem;
      align-items: center;
    }

    .nav-links a {
      color: var(--text-secondary);
      text-decoration: none;
      padding: 0.75rem 1.25rem;
      border-radius: 12px;
      font-weight: 500;
      font-size: 0.95rem;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
    }

    .nav-links a::before {
      content: '';
      position: absolute;
      inset: 0;
      border-radius: 12px;
      background: var(--gradient-primary);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .nav-links a:hover {
      color: var(--text-primary);
      transform: translateY(-2px);
    }

    .nav-links a:hover::before {
      opacity: 0.1;
    }

    /* Main content */
    .main-theme {
      text-align: center;
      padding: 6rem 2rem 4rem;
      position: relative;
      z-index: 1;
    }

    .hero-section {
      max-width: 800px;
      margin: 0 auto 6rem;
    }

.main-logo {
  width: 4rem;
  height: 4rem;
  margin-bottom: 2rem;
  background-image: url('path/to/logo.png');
  background-size: contain;
  background-repeat: no-repeat;
  filter: drop-shadow(0 0 30px rgba(36, 132, 242, 0.4));
  animation: float-logo 6s ease-in-out infinite;
}


    @keyframes float-logo {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }

    .main-title {
      font-size: clamp(2.5rem, 5vw, 4rem);
      font-weight: 700;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, var(--text-primary), var(--primary-light));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      line-height: 1.2;
      letter-spacing: -0.02em;
    }

    .main-subtitle {
      font-size: 1.25rem;
      color: var(--text-secondary);
      margin-bottom: 3rem;
      font-weight: 400;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1.6;
    }

    /* Stats grid */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 2rem;
      max-width: 1000px;
      margin: 0 auto 6rem;
    }

    .stat-card {
      background: var(--gradient-card);
      border: 1px solid var(--border-color);
      border-radius: 20px;
      padding: 2.5rem 2rem;
      position: relative;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      overflow: hidden;
    }

    .stat-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 2px;
      background: var(--gradient-primary);
      transform: scaleX(0);
      transition: transform 0.4s ease;
    }

    .stat-card:hover {
      transform: translateY(-8px);
      box-shadow: var(--shadow-lg);
      border-color: var(--primary-color);
    }

    .stat-card:hover::before {
      transform: scaleX(1);
    }

    .stat-card h3 {
      color: var(--text-primary);
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
      letter-spacing: -0.01em;
    }

    .stat-number {
      font-size: 3rem;
      font-weight: 700;
      margin: 1rem 0;
      background: var(--gradient-primary);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      line-height: 1;
    }

    .stat-description {
      color: var(--text-muted);
      font-size: 0.9rem;
      font-weight: 400;
    }

    /* Action button */
    .action-section {
      margin: 4rem 0 6rem;
      position: relative;
    }

    .generate-btn {
      background: var(--gradient-primary);
      border: none;
      border-radius: 16px;
      padding: 1.25rem 2.5rem;
      font-size: 1.1rem;
      font-weight: 600;
      color: white;
      cursor: pointer;
      position: relative;
      overflow: hidden;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 8px 32px rgba(36, 132, 242, 0.3);
      user-select: none;
      display: inline-flex;
      align-items: center;
      gap: 0.75rem;
      font-family: inherit;
      letter-spacing: -0.01em;
    }

    .generate-btn::before {
      content: '';
      position: absolute;
      inset: 0;
      background: linear-gradient(135deg, var(--primary-light), var(--primary-color));
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .generate-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 48px rgba(36, 132, 242, 0.4);
    }

    .generate-btn:hover::before {
      opacity: 1;
    }

    .generate-btn:active {
      transform: translateY(-1px);
    }

    .generate-btn.long-pressing {
      background: linear-gradient(135deg, #00ff88, #00cc6a);
      box-shadow: 0 12px 48px rgba(0, 255, 136, 0.4);
    }

    .btn-content {
      position: relative;
      z-index: 1;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .btn-icon {
      font-size: 1.25rem;
      transition: transform 0.3s ease;
    }

    .generate-btn:hover .btn-icon {
      transform: rotate(5deg) scale(1.1);
    }

    /* Progress bar */
    .btn-progress {
      position: absolute;
      bottom: 0;
      left: 0;
      height: 3px;
      background: #00ff88;
      width: 0;
      transition: width 0.1s ease;
      border-radius: 0 0 16px 16px;
      box-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
    }

    .action-hint {
      margin-top: 1.5rem;
      color: var(--text-muted);
      font-size: 0.9rem;
      font-weight: 400;
    }

    /* Updates section */
    .updates-section {
      max-width: 700px;
      margin: 0 auto;
      text-align: right;
    }

    .updates-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 2rem;
      color: var(--text-primary);
      text-align: center;
    }

    .update-item {
      background: var(--gradient-card);
      border: 1px solid var(--border-color);
      border-radius: 16px;
      padding: 2rem;
      margin-bottom: 1.5rem;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      overflow: hidden;
      text-align: right;
    }

    /* =================== LOGO STYLES =================== */
.logo-img {
  height: 2.5rem;
  width: auto;
  filter: drop-shadow(0 0 20px rgba(36, 132, 242, 0.3));
  transition: var(--transition-smooth);
  animation: pulse-logo 3s ease-in-out infinite;
}

.logo-img:hover {
  filter: drop-shadow(0 0 30px rgba(36, 132, 242, 0.5));
  transform: scale(1.05);
}

@keyframes pulse-logo {
  0%, 100% { 
    filter: drop-shadow(0 0 20px rgba(36, 132, 242, 0.3));
    transform: scale(1);
  }
  50% { 
    filter: drop-shadow(0 0 30px rgba(36, 132, 242, 0.4));
    transform: scale(1.02);
  }
}

/* Hero section logo */
.hero-logo {
  height: 6rem;
  width: auto;
  filter: drop-shadow(0 0 40px rgba(36, 132, 242, 0.4));
  animation: float-logo 6s ease-in-out infinite;
  margin-bottom: var(--space-lg);
}

@keyframes float-logo {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-15px); }
}

/* Auth pages logo */
.auth-logo-img {
  height: 4rem;
  width: auto;
  filter: drop-shadow(0 0 25px rgba(36, 132, 242, 0.4));
  animation: float 6s ease-in-out infinite;
  margin-bottom: var(--space-md);
}

/* Dashboard and other pages */
.navbar .logo-img {
  height: 2.2rem;
}

/* Email template logo */
.email-logo {
  height: 5rem;
  width: auto;
  filter: drop-shadow(0 0 20px rgba(36, 132, 242, 0.3));
}

/* Footer logo */
.footer-logo {
  height: 2rem;
  width: auto;
  filter: drop-shadow(0 0 15px rgba(36, 132, 242, 0.3));
}

/* Responsive logo sizes */
@media (max-width: 768px) {
  .logo-img {
    height: 2rem;
  }
  
  .hero-logo {
    height: 5rem;
  }
  
  .auth-logo-img {
    height: 3.5rem;
  }
  
  .navbar .logo-img {
    height: 2rem;
  }
}

@media (max-width: 480px) {
  .logo-img {
    height: 1.8rem;
  }
  
  .hero-logo {
    height: 4rem;
  }
  
  .auth-logo-img {
    height: 3rem;
  }
}

    .update-item::before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 4px;
      height: 100%;
      background: var(--gradient-primary);
      transform: scaleY(0);
      transition: transform 0.3s ease;
      transform-origin: bottom;
    }

    .update-item:hover {
      transform: translateX(-8px);
      border-color: var(--primary-color);
      box-shadow: var(--shadow-md);
    }

    .update-item:hover::before {
      transform: scaleY(1);
    }

    .update-title {
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.75rem;
      font-size: 1.05rem;
    }

    .update-description {
      color: var(--text-secondary);
      margin-bottom: 1rem;
      line-height: 1.6;
    }

    .update-time {
      color: var(--text-muted);
      font-size: 0.85rem;
      font-weight: 500;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .container {
        padding: 0 1.5rem;
      }

      .navbar .container {
        padding: 1rem 1.5rem;
      }

      .main-theme {
        padding: 4rem 1.5rem 3rem;
      }

      .stats-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }

      .stat-card {
        padding: 2rem 1.5rem;
      }

      .nav-links {
        gap: 0.25rem;
      }

      .nav-links a {
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
      }

      .generate-btn {
        padding: 1rem 2rem;
        font-size: 1rem;
      }
    }

    /* Smooth animations on scroll */
    .fade-in {
      opacity: 0;
      transform: translateY(30px);
      transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .fade-in.visible {
      opacity: 1;
      transform: translateY(0);
    }

    .slide-up {
      opacity: 0;
      transform: translateY(50px);
      transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .slide-up.visible {
      opacity: 1;
      transform: translateY(0);
    }
  </style>
</head>
<body>
  <div class="disguise-container">
    <nav class="navbar" id="navbar">
      <div class="container">
        <a href="#" class="logo">
          <img src="/image/1.png" alt="Logo" class="logo-img">
          <span>نظام إدارة المشاريع</span>
        </a>
        <ul class="nav-links">
          <li><a href="#">لوحة التحكم</a></li>
          <li><a href="#">التحليلات</a></li>
          <li><a href="#">التقارير</a></li>
          <li><a href="#">الإعدادات</a></li>
        </ul>
      </div>
    </nav>

    <div class="main-theme">
      <div class="hero-section fade-in">
        <img src="/image/1.png" alt="Logo" class="main-logo">
        <h1 class="main-title">نظام إدارة المشاريع المتقدم</h1>
        <p class="main-subtitle">
          منصة شاملة لإدارة وتتبع المشاريع مع تحليلات متقدمة وتقارير تفصيلية لضمان نجاح جميع العمليات
        </p>
      </div>

      <div class="stats-grid">
        <div class="stat-card slide-up" style="transition-delay: 0.1s;">
          <h3>المشاريع النشطة</h3>
          <div class="stat-number">142</div>
          <p class="stat-description">مشروع قيد التنفيذ والمراقبة المستمرة</p>
        </div>
        <div class="stat-card slide-up" style="transition-delay: 0.2s;">
          <h3>فرق العمل</h3>
          <div class="stat-number">28</div>
          <p class="stat-description">فريق متخصص يعمل على المشاريع المختلفة</p>
        </div>
        <div class="stat-card slide-up" style="transition-delay: 0.3s;">
          <h3>معدل الإنجاز</h3>
          <div class="stat-number">87%</div>
          <p class="stat-description">معدل إكمال المشاريع في الوقت المحدد</p>
        </div>
      </div>

      <div class="action-section fade-in">
        <button id="disguise-unlock-btn" class="generate-btn">
          <div class="btn-content">
            <span class="btn-icon">📈</span>
            <span>إنشاء تقرير شامل للأداء</span>
          </div>
          <div class="btn-progress" id="progress-bar"></div>
        </button>
        <p class="action-hint">
          اضغط مع الاستمرار لمدة 3 ثوان لإنشاء تقرير تفصيلي للأداء والإحصائيات
        </p>
      </div>

      <div class="updates-section">
        <h3 class="updates-title fade-in">آخر التحديثات في النظام</h3>
        
        <div class="update-item slide-up" style="transition-delay: 0.1s;">
          <div class="update-title">تم إطلاق وحدة التحليلات المتقدمة - الإصدار 2.4</div>
          <p class="update-description">
            تم تطوير نظام تحليلات جديد يوفر رؤى عميقة حول أداء المشاريع مع إمكانيات تنبؤ متقدمة وتقارير تفاعلية
          </p>
          <div class="update-time">منذ ساعتين</div>
        </div>

        <div class="update-item slide-up" style="transition-delay: 0.2s;">
          <div class="update-title">تحديث أمني شامل للنظام - الإصدار 2.3.8</div>
          <p class="update-description">
            تم تطبيق آخر معايير الأمان السيبراني مع تحسينات في نظام التشفير وإجراءات الحماية المتقدمة للبيانات
          </p>
          <div class="update-time">منذ 4 ساعات</div>
        </div>

        <div class="update-item slide-up" style="transition-delay: 0.3s;">
          <div class="update-title">صيانة دورية للخوادم الرئيسية</div>
          <p class="update-description">
            تم إجراء صيانة شاملة للخوادم وتحديث البنية التحتية لضمان استمرارية الخدمة والأداء الأمثل للنظام
          </p>
          <div class="update-time">منذ يوم واحد</div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Enhanced Long Press with Modern Animations - Arabic Version
    class ModernDisguiseUnlock {
      constructor() {
        this.isPressed = false;
        this.pressTimer = null;
        this.progressTimer = null;
        this.holdDuration = 3000;
        this.progressInterval = 50;
        this.currentProgress = 0;
        this.init();
        this.initScrollAnimations();
      }

      init() {
        const disguiseBtn = document.getElementById('disguise-unlock-btn');
        const progressBar = document.getElementById('progress-bar');
        
        if (disguiseBtn && progressBar) {
          // Enhanced event listeners
          disguiseBtn.addEventListener('mousedown', this.handlePressStart.bind(this));
          disguiseBtn.addEventListener('mouseup', this.handlePressEnd.bind(this));
          disguiseBtn.addEventListener('mouseleave', this.handlePressEnd.bind(this));
          
          // Touch events
          disguiseBtn.addEventListener('touchstart', this.handlePressStart.bind(this));
          disguiseBtn.addEventListener('touchend', this.handlePressEnd.bind(this));
          disguiseBtn.addEventListener('touchcancel', this.handlePressEnd.bind(this));
          
          // Prevent context menu
          disguiseBtn.addEventListener('contextmenu', e => e.preventDefault());
        }

        // Navbar scroll effect
        window.addEventListener('scroll', this.handleScroll.bind(this));
      }

      handlePressStart(e) {
        e.preventDefault();
        if (this.isPressed) return;
        
        this.isPressed = true;
        this.currentProgress = 0;
        
        const btn = document.getElementById('disguise-unlock-btn');
        const progressBar = document.getElementById('progress-bar');
        
        btn.classList.add('long-pressing');
        
        // Enhanced haptic feedback
        if (navigator.vibrate) {
          navigator.vibrate(50);
        }
        
        // Smooth progress animation
        this.progressTimer = setInterval(() => {
          this.currentProgress += this.progressInterval;
          const percentage = (this.currentProgress / this.holdDuration) * 100;
          progressBar.style.width = Math.min(percentage, 100) + '%';
          
          // Progressive haptic feedback
          if (navigator.vibrate && percentage % 33 === 0) {
            navigator.vibrate(30);
          }
        }, this.progressInterval);
        
        // Success timer
        this.pressTimer = setTimeout(() => {
          this.unlockSuccess();
        }, this.holdDuration);
      }

      handlePressEnd() {
        if (!this.isPressed) return;
        
        this.isPressed = false;
        
        const btn = document.getElementById('disguise-unlock-btn');
        const progressBar = document.getElementById('progress-bar');
        
        btn.classList.remove('long-pressing');
        
        // Clear timers
        if (this.pressTimer) {
          clearTimeout(this.pressTimer);
          this.pressTimer = null;
        }
        
        if (this.progressTimer) {
          clearInterval(this.progressTimer);
          this.progressTimer = null;
        }
        
        // Smooth reset animation
        progressBar.style.transition = 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
        progressBar.style.width = '0%';
        
        setTimeout(() => {
          progressBar.style.transition = 'width 0.1s ease';
        }, 500);
        
        this.currentProgress = 0;
      }

      async unlockSuccess() {
        const btn = document.getElementById('disguise-unlock-btn');
        const progressBar = document.getElementById('progress-bar');
        
        // Success animation
        progressBar.style.width = '100%';
        progressBar.style.background = '#00ff88';
        
        btn.innerHTML = `
          <div class="btn-content">
            <span class="btn-icon">✅</span>
            <span>تم منح الوصول</span>
          </div>
          <div class="btn-progress" id="progress-bar"></div>
        `;
        
        // Enhanced haptic feedback
        if (navigator.vibrate) {
          navigator.vibrate([100, 50, 100, 50, 200]);
        }
        
        try {
          console.log('🔓 محاولة إلغاء وضع التمويه...');
          
          const response = await fetch('/api/unlock-disguise', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Cache-Control': 'no-cache'
            },
            credentials: 'same-origin'
          });
          
          console.log('📡 حالة الاستجابة:', response.status);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          const data = await response.json();
          console.log('📦 بيانات الاستجابة:', data);
          
          if (data.success) {
            console.log('✅ تم منح الوصول، جاري التوجيه...');
            
            // Smooth transition effect
            document.body.style.transition = 'opacity 0.5s ease';
            document.body.style.opacity = '0.5';
            
            setTimeout(() => {
              if (data.redirectUrl) {
                window.location.href = data.redirectUrl;
              } else {
                window.location.href = '/dashboard?bypass=true';
              }
            }, 800);
            
            // Fallback
            setTimeout(() => {
              window.location.href = '/dashboard/real';
            }, 3000);
            
          } else {
            this.showError(data.error || 'تم رفض الوصول');
          }
        } catch (error) {
          console.error('❌ فشل في إلغاء التمويه:', error);
          this.showError('خطأ في الاتصال');
        }
      }

      showError(message) {
        const btn = document.getElementById('disguise-unlock-btn');
        const progressBar = document.getElementById('progress-bar');
        
        btn.innerHTML = `
          <div class="btn-content">
            <span class="btn-icon">❌</span>
            <span>${message}</span>
          </div>
        `;
        
        btn.style.background = 'linear-gradient(135deg, #ff4757, #ff3838)';
        progressBar.style.background = '#ff4757';
        
        // Reset after delay
        setTimeout(() => {
          btn.innerHTML = `
            <div class="btn-content">
              <span class="btn-icon">📈</span>
              <span>إنشاء تقرير شامل للأداء</span>
            </div>
            <div class="btn-progress" id="progress-bar"></div>
          `;
          btn.style.background = '';
          progressBar.style.background = '#00ff88';
          progressBar.style.width = '0%';
        }, 3000);
      }

      handleScroll() {
        const navbar = document.getElementById('navbar');
        if (window.scrollY > 50) {
          navbar.classList.add('scrolled');
        } else {
          navbar.classList.remove('scrolled');
        }
      }

      initScrollAnimations() {
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
            }
          });
        }, observerOptions);

        // Observe all animation elements
        document.querySelectorAll('.fade-in, .slide-up').forEach(el => {
          observer.observe(el);
        });
      }
    }

    // Initialize on DOM load
    document.addEventListener('DOMContentLoaded', () => {
      new ModernDisguiseUnlock();
      console.log('🎨 تم تهيئة وضع التمويه العربي');
      console.log('💡 اضغط مع الاستمرار على زر "إنشاء تقرير شامل للأداء" لمدة 3 ثوان');
    });
  </script>
</body>
</html>